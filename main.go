package main

import (
	"go-gin/config"
	"go-gin/routes"

	_ "go-gin/docs" // docs generated by Swag

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// @title           Go Gin
// @version         1.0.0
// @description     Proyecto base para aplicaciones Gin con ejemplos de configuración, testing y buenas prácticas.
// @contact.name    Byron Villegas Moya
// @contact.url     https://github.com/byron-villegas
// @contact.email   byronvillegasm@gmail.com
// @license.name    MIT
// @license.url     https://github.com/byron-villegas/go-gin/blob/main/LICENSE
// @BasePath        /api
func main() {
	// Show banner with application information
	config.ShowBanner()

	// Create a server instance
	r := gin.Default()

	// Config CORS
	r.Use(cors.New(cors.Config{
		AllowOrigins:     []string{config.AppConfig.CORSOrigin},
		AllowMethods:     []string{"GET", "POST", "PUT", "DELETE"},
		AllowHeaders:     []string{config.AppConfig.CORSHeaders},
		AllowCredentials: true,
	}))

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// Config server path
	routerGroup := r.Group(config.AppConfig.ServerPath)

	// Config routes for the server
	routes.SetupRoutes(routerGroup)

	// Start server with port
	r.Run(":" + config.AppConfig.ServerPort)
}

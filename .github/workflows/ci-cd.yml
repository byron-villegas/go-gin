name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: golang:1.23
    steps:
      - uses: actions/checkout@v4
      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Go Modules
        run: go mod download
      - name: Build Go Project
        run: go build -buildvcs=false -o main .
  unit-test:
    needs: [ build ]
    runs-on: ubuntu-latest
    container:
      image: golang:1.23
    steps:
      - uses: actions/checkout@v4
      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Go Modules
        run: go mod download
      - name: Build Go Project
        run: go build -buildvcs=false -o main .
      - name: Run Tests With Coverage
        run: go test -coverprofile="coverage.out" ./repository ./service ./controller ./routes ./config
      - name: Generate Coverage Report
        run: go tool cover -func="coverage.out"
      - name: Generate HTML Coverage Report
        run: go tool cover -html="coverage.out" -o coverage.html
      - uses: actions/upload-artifact@v4
        with:
          name: Coverage Report 
          path: coverage.out
      - uses: actions/upload-artifact@v4
        with:
          name: HTML Coverage Report
          path: coverage.html
  deploy:
    needs: [ build, unit-test ]
    runs-on: ubuntu-latest
    env:
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
    steps:
      - name: Deploy With Hook
        run: curl -X POST $RENDER_DEPLOY_HOOK > deploy.json
      - uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy.json
      - name: Sleep By Two Minutes
        run: sleep 120
  acceptance-test:
    needs: [ deploy ]
    runs-on: ubuntu-latest
    env:
      API_HOST: "https://go-gin-obto.onrender.com/api"
    container:
      image: golang:1.23
    steps:
      - uses: actions/checkout@v4
      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Go Modules
        run: go mod download
      - name: Run Acceptance Tests
        run: go test ./acceptance-test
      - uses: actions/upload-artifact@v4
        with:
          name: Acceptance Test Report
          path: acceptance-test/godog-report.json
  performance-test-vegeta:
    needs: [ acceptance-test]
    runs-on: ubuntu-latest
    env:
      API_HOST: "https://go-gin-obto.onrender.com/api"
    container:
      image: golang:1.23
    steps:
      - uses: actions/checkout@v4
      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Go Modules
        run: go mod download
      - name: Run Performance Tests With Vegeta
        run: go test -v ./performance-test/vegeta
      - uses: actions/upload-artifact@v4
        with:
          name: Performance Test Reports
          path: /performance-test/vegeta/reports/
          